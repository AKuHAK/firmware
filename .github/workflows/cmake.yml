name: CMake

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
         submodules: 'recursive'
         fetch-depth: '0'
    - run: |
        git fetch --prune --tags
        git tag --list
        git fetch --all --tags
        SD2PSX_VERSION=$(git describe --exclude latest | sed 's/\(.*\)-.*/\1/')
        echo "SD2PSX_VERSION=${SD2PSX_VERSION}" >> $GITHUB_ENV
        echo "${SD2PSX_VERSION}"
      
    - name: add build essential
      run: sudo apt update && sudo apt install -y build-essential gcc-arm-none-eabi



    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Configure CMake for Debug USB
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build_usb -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DDEBUG_USB_UART:BOOL=ON

    - name: Build Debug USB
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build_usb --config ${{env.BUILD_TYPE}}
      
    - name: Rename Debug USB uf2
      run: mv build_usb/sd2psx.uf2 build/sd2psx_usb_debug.uf2

    - uses: marvinpinto/action-automatic-releases@v1.2.1
      if: github.event_name != 'pull_request'
      # uses: marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0
      with:
        # GitHub secret token
        title:  "${{ env.SD2PSX_VERSION }}"
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: latest
        prerelease: true
        # Assets to upload to the release
        files: |
          build/*.uf2

 
